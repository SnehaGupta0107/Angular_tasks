{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-color-picker\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      this.color = '#ffffff';\n    }\n    ngOnInit() {\n      throw new Error('Method not implemented.');\n    }\n    colorize() {\n      chrome.tabs.query({\n        active: true,\n        currentWindow: true\n      }, tabs => {\n        chrome.scripting.executeScript({\n          target: {\n            tabId: tabs[0].id\n          },\n          func: updateBackgroundColor,\n          args: [this.color]\n        });\n      });\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 1,\n    vars: 8,\n    consts: [[3, \"cpToggle\", \"cpDialogDisplay\", \"cpPositionRelativeToArrow\", \"colorPicker\", \"cpOKButtonText\", \"cpOKButton\", \"colorPickerChange\", \"colorPickerSelect\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 0);\n        i0.ɵɵlistener(\"colorPickerChange\", function AppComponent_Template_span_colorPickerChange_0_listener($event) {\n          return ctx.color = $event;\n        })(\"colorPickerSelect\", function AppComponent_Template_span_colorPickerSelect_0_listener() {\n          return ctx.colorize();\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"color\", ctx.color);\n        i0.ɵɵproperty(\"cpToggle\", true)(\"cpDialogDisplay\", \"inline\")(\"cpPositionRelativeToArrow\", true)(\"colorPicker\", ctx.color)(\"cpOKButtonText\", \"Apply\")(\"cpOKButton\", true);\n      }\n    },\n    dependencies: [i1.ColorPickerDirective],\n    styles: [\"body[_ngcontent-%COMP%]{margin:0}\"]\n  });\n  return AppComponent;\n})();\nconst updateBackgroundColor = color => document.body.style.backgroundColor = color;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}